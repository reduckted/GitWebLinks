<platform:DialogWindow
    x:Class="GitWebLinks.SelectTargetDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:GitWebLinks"
    xmlns:resources="clr-namespace:GitWebLinks.Resources"
    xmlns:platform="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
    xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
    xmlns:internal="clr-namespace:Microsoft.Internal.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:theming="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Imaging"
    xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
    xmlns:utilities="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Utilities"
    mc:Ignorable="d" 
    d:DataContext="{d:DesignInstance Type=local:SelectTargetDialogViewModel, IsDesignTimeCreatable=False}"
    toolkit:Themes.UseVsTheme="True"
    Width="450"
    MinHeight="250"
    MaxHeight="400" 
    SizeToContent="Height"
    ResizeMode="NoResize"
    WindowStyle="None"
    HasDialogFrame="False"
    BorderBrush="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowBorderBrushKey}}"
    BorderThickness="1"
    WindowStartupLocation="CenterOwner"
    Loaded="OnLoaded"
    local:FocusOnLoad.Target="{Binding ElementName=FilterTextBox}"
    local:CancelOnLostKeyboardFocus.Enabled="True"
    local:CancelOnEscape.Enabled="True"
    local:DialogResult.Value="{Binding DialogResult}"
    >

    <platform:DialogWindow.InputBindings>
        <KeyBinding Key="Return" Command="{Binding SelectTargetCommand}" CommandParameter="{Binding SelectedTarget}"/>
    </platform:DialogWindow.InputBindings>

    <Border
        BorderBrush="{DynamicResource {x:Static platform:EnvironmentColors.TitleBarActiveBorderBrushKey}}"
        BorderThickness="0,4,0,0"
        Padding="0,2,0,0"
        >

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.Resources>
                <CollectionViewSource x:Key="TargetItems" Source="{Binding Targets}">
                    <CollectionViewSource.GroupDescriptions>
                        <PropertyGroupDescription PropertyName="Kind" />
                    </CollectionViewSource.GroupDescriptions>
                </CollectionViewSource>

                <utilities:BrushToColorConverter x:Key="BrushToColorConverter"/>
            </Grid.Resources>

            <platform:WatermarkedTextBox
                x:Name="FilterTextBox"
                Grid.Row="0"
                Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}"
                Margin="7,5"
                Watermark="{x:Static resources:Strings.SelectTargetDialog_Watermark}"
                local:ClearOnEscape.Enabled="True"
                local:ListNavigation.List="{Binding ElementName=TargetList}"
                />

            <ListBox
                x:Name="TargetList"
                Grid.Row="1"
                BorderThickness="0"
                ItemsSource="{Binding Source={StaticResource TargetItems}}"
                SelectedItem="{Binding SelectedTarget, Mode=TwoWay}"
                theming:ImageThemingUtilities.ImageBackgroundColor="{Binding Background, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                VirtualizingPanel.ScrollUnit="Pixel"
                local:ListNavigation.Circular="True"
                >

                <ListBox.Template>
                    <!-- Redefine the template to get rid of the fixed padding. -->
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <ScrollViewer Focusable="False">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </ControlTemplate>
                </ListBox.Template>

                <ListBox.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <Separator Background="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowBorderBrushKey}}"/>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>

                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <!-- Redefine the template to get rid of the margin on the ItemsPresenter. -->
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <StackPanel Orientation="Vertical">
                                                <ContentPresenter x:Name="PART_Header"/>
                                                <ItemsPresenter x:Name="ItemsPresenter"/>
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </ListBox.GroupStyle>

                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="0" />
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type local:LinkTargetListItem}">
                        <Border Padding="4,1">
                            <Border.InputBindings>
                                <MouseBinding
                                    MouseAction="LeftDoubleClick"
                                    Command="{Binding DataContext.SelectTargetCommand, RelativeSource={RelativeSource AncestorType={x:Type local:SelectTargetDialog}}}"
                                    CommandParameter="{Binding}"
                                    />
                            </Border.InputBindings>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <imaging:CrispImage
                                    Grid.Column="0"
                                    x:Name="TargetIcon"
                                    Moniker="{x:Static catalog:KnownMonikers.PushPin}"
                                    Margin="3"
                                    VerticalAlignment="Center"
                                    />

                                <internal:HighlightTextBlock
                                    Grid.Column="1"
                                    TextSource="{Binding Name}"
                                    TextTrimming="CharacterEllipsis"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    internal:HighlightTextBlock.HighlightRuns="{Binding NameHighlightSpans}"
                                    HighlightBackground="{DynamicResource {x:Static platform:TreeViewColors.HighlightedSpanBrushKey}}"
                                    HighlightForeground="{DynamicResource {x:Static platform:TreeViewColors.HighlightedSpanTextBrushKey}}"
                                    HighlightFontWeight="Normal"
                                    />

                                <internal:HighlightTextBlock
                                    Grid.Column="2"
                                    TextSource="{Binding Description}"
                                    VerticalAlignment="Center"
                                    TextTrimming="CharacterEllipsis"
                                    Opacity="0.5"
                                    Margin="7,0,0,0"
                                    internal:HighlightTextBlock.HighlightRuns="{Binding DescriptionHighlightSpans}"
                                    HighlightBackground="{DynamicResource {x:Static platform:TreeViewColors.HighlightedSpanBrushKey}}"
                                    HighlightForeground="{DynamicResource {x:Static platform:TreeViewColors.HighlightedSpanTextBrushKey}}"
                                    HighlightFontWeight="Normal"
                                    />
                            </Grid>
                        </Border>

                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Kind}" Value="{x:Static local:LinkTargetListItemKind.Commit}">
                                <Setter TargetName="TargetIcon" Property="Moniker" Value="{x:Static catalog:KnownMonikers.Commit}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Kind}" Value="{x:Static local:LinkTargetListItemKind.Branch}">
                                <Setter TargetName="TargetIcon" Property="Moniker" Value="{x:Static catalog:KnownMonikers.Branch}"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <TextBlock
                Grid.Row="1"
                VerticalAlignment="Top"
                TextAlignment="Center"
                Text="No matching link targets"
                Visibility="{Binding NoTargetsVisibility}"
                Margin="7"
                />

            <platform:SmoothProgressBar
                Grid.Row="1"
                IsIndeterminate="True"
                Visibility="{Binding LoadingVisibility}"
                VerticalAlignment="Bottom"
                />
        </Grid>
    </Border>
</platform:DialogWindow>
