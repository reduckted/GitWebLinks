//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GitWebLinks.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GitWebLinks.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while creating the link: {0}.
        /// </summary>
        public static string GetLinkCommand_Error {
            get {
                return ResourceManager.GetString("GetLinkCommand_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was a problem opening the link: {0}.
        /// </summary>
        public static string GetLinkCommand_FailedToOpenLink {
            get {
                return ResourceManager.GetString("GetLinkCommand_FailedToOpenLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link copied to {0}.
        /// </summary>
        public static string GetLinkCommand_LinkCopied {
            get {
                return ResourceManager.GetString("GetLinkCommand_LinkCopied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Git remote &apos;{0}&apos; is not supported. If this is a private Git server, you may need to add the server address to the settings..
        /// </summary>
        public static string GetLinkCommand_NoHandler {
            get {
                return ResourceManager.GetString("GetLinkCommand_NoHandler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository &apos;{0}&apos; does not have a &apos;HEAD&apos; ref for the &apos;{1}&apos; remote. You can fix this by running the command: git remote set-head {1} --auto.
        /// </summary>
        public static string GetLinkCommand_NoRemoteHead {
            get {
                return ResourceManager.GetString("GetLinkCommand_NoRemoteHead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository &apos;{0}&apos; does not have any remotes..
        /// </summary>
        public static string GetLinkCommand_NoRemotes {
            get {
                return ResourceManager.GetString("GetLinkCommand_NoRemotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; is not tracked by Git..
        /// </summary>
        public static string GetLinkCommand_NotTrackedByGit {
            get {
                return ResourceManager.GetString("GetLinkCommand_NotTrackedByGit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Git executable cannot be found. Ensure that Git is installed and is in the PATH environment variable..
        /// </summary>
        public static string GitNotFound {
            get {
                return ResourceManager.GetString("GitNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No files were found for the URL.
        /// </summary>
        public static string GoToFileDialog_NoFilesFound {
            get {
                return ResourceManager.GetString("GoToFileDialog_NoFilesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the URL of the file to go to.
        /// </summary>
        public static string GoToFileDialog_Watermark {
            get {
                return ResourceManager.GetString("GoToFileDialog_Watermark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was a problem loading the target refs: {0}.
        /// </summary>
        public static string SelectTargetDialog_CouldNotLoadTargets {
            get {
                return ResourceManager.GetString("SelectTargetDialog_CouldNotLoadTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What would you like to create the link to?.
        /// </summary>
        public static string SelectTargetDialog_Watermark {
            get {
                return ResourceManager.GetString("SelectTargetDialog_Watermark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy Markdown.
        /// </summary>
        public static string Toast_CopyMarkdown {
            get {
                return ResourceManager.GetString("Toast_CopyMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy without Code Block.
        /// </summary>
        public static string Toast_CopyMarkdownWithoutPreview {
            get {
                return ResourceManager.GetString("Toast_CopyMarkdownWithoutPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy with Code Block.
        /// </summary>
        public static string Toast_CopyMarkdownWithPreview {
            get {
                return ResourceManager.GetString("Toast_CopyMarkdownWithPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy Raw URL.
        /// </summary>
        public static string Toast_CopyRaw {
            get {
                return ResourceManager.GetString("Toast_CopyRaw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open in Browser.
        /// </summary>
        public static string Toast_OpenInBrowser {
            get {
                return ResourceManager.GetString("Toast_OpenInBrowser", resourceCulture);
            }
        }
    }
}
